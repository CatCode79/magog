use glfw;

#[deriving(Clone, Eq, ToStr)]
pub enum KeyCode {
    UP = 1,
    RIGHT = 2,
    DOWN = 3,
    LEFT = 4,
    HOME = 5,
    END = 6,
    KP5 = 7,
    BACKSPACE = 8,
    TAB = 9,
    ENTER = 10,
    PAGEUP = 11,
    PAGEDOWN = 12,
    INSERT = 13,
    DEL = 14,
    F1 = 15,
    F2 = 16,
    F3 = 17,
    F4 = 18,
    F5 = 19,
    F6 = 20,
    F7 = 21,
    F8 = 22,
    F9 = 23,
    F10 = 24,
    F11 = 25,
    F12 = 26,
    ESC = 27,
    UNKNOWN = 28,
    SPACE = 32,
    QUOTE = 39,
    ASTERISK = 42,
    PLUS = 43,
    COMMA = 44,
    MINUS = 45,
    PERIOD = 46,
    SLASH = 47,
    NUM_0 = 48,
    NUM_1 = 49,
    NUM_2 = 50,
    NUM_3 = 51,
    NUM_4 = 52,
    NUM_5 = 53,
    NUM_6 = 54,
    NUM_7 = 55,
    NUM_8 = 56,
    NUM_9 = 57,
    SEMICOLON = 59,
    EQUALS = 61,
    A = 65,
    B = 66,
    C = 67,
    D = 68,
    E = 69,
    F = 70,
    G = 71,
    H = 72,
    I = 73,
    J = 74,
    K = 75,
    L = 76,
    M = 77,
    N = 78,
    O = 79,
    P = 80,
    Q = 81,
    R = 82,
    S = 83,
    T = 84,
    U = 85,
    V = 86,
    W = 87,
    X = 88,
    Y = 89,
    Z = 90,
    LEFT_BRACKET = 91,
    BACKSLASH = 92,
    RIGHT_BRACKET = 93,
    BACKQUOTE = 96,
}

pub fn translate_glfw_key(k: glfw::Key) -> Option<KeyCode> {
    match k {
        glfw::KeySpace => Some(SPACE),
        glfw::KeyApostrophe => Some(QUOTE),
        glfw::KeyComma => Some(COMMA),
        glfw::KeyMinus => Some(MINUS),
        glfw::KeyPeriod => Some(PERIOD),
        glfw::KeySlash => Some(SLASH),
        glfw::Key0 => Some(NUM_0),
        glfw::Key1 => Some(NUM_1),
        glfw::Key2 => Some(NUM_2),
        glfw::Key3 => Some(NUM_3),
        glfw::Key4 => Some(NUM_4),
        glfw::Key5 => Some(NUM_5),
        glfw::Key6 => Some(NUM_6),
        glfw::Key7 => Some(NUM_7),
        glfw::Key8 => Some(NUM_8),
        glfw::Key9 => Some(NUM_9),
        glfw::KeySemicolon => Some(SEMICOLON),
        glfw::KeyEqual => Some(EQUALS),
        glfw::KeyA => Some(A),
        glfw::KeyB => Some(B),
        glfw::KeyC => Some(C),
        glfw::KeyD => Some(D),
        glfw::KeyE => Some(E),
        glfw::KeyF => Some(F),
        glfw::KeyG => Some(G),
        glfw::KeyH => Some(H),
        glfw::KeyI => Some(I),
        glfw::KeyJ => Some(J),
        glfw::KeyK => Some(K),
        glfw::KeyL => Some(L),
        glfw::KeyM => Some(M),
        glfw::KeyN => Some(N),
        glfw::KeyO => Some(O),
        glfw::KeyP => Some(P),
        glfw::KeyQ => Some(Q),
        glfw::KeyR => Some(R),
        glfw::KeyS => Some(S),
        glfw::KeyT => Some(T),
        glfw::KeyU => Some(U),
        glfw::KeyV => Some(V),
        glfw::KeyW => Some(W),
        glfw::KeyX => Some(X),
        glfw::KeyY => Some(Y),
        glfw::KeyZ => Some(Z),
        glfw::KeyLeftBracket => Some(LEFT_BRACKET),
        glfw::KeyBackslash => Some(BACKSLASH),
        glfw::KeyRightBracket => Some(RIGHT_BRACKET),
        glfw::KeyGraveAccent => Some(BACKQUOTE),
        glfw::KeyEscape => Some(ESC),
        glfw::KeyEnter => Some(ENTER),
        glfw::KeyTab => Some(TAB),
        glfw::KeyBackspace => Some(BACKSPACE),
        glfw::KeyInsert => Some(INSERT),
        glfw::KeyDelete => Some(DEL),
        glfw::KeyRight => Some(RIGHT),
        glfw::KeyLeft => Some(LEFT),
        glfw::KeyDown => Some(DOWN),
        glfw::KeyUp => Some(UP),
        glfw::KeyPageUp => Some(PAGEUP),
        glfw::KeyPageDown => Some(PAGEDOWN),
        glfw::KeyHome => Some(HOME),
        glfw::KeyEnd => Some(END),
        glfw::KeyF1 => Some(F1),
        glfw::KeyF2 => Some(F2),
        glfw::KeyF3 => Some(F3),
        glfw::KeyF4 => Some(F4),
        glfw::KeyF5 => Some(F5),
        glfw::KeyF6 => Some(F6),
        glfw::KeyF7 => Some(F7),
        glfw::KeyF8 => Some(F8),
        glfw::KeyF9 => Some(F9),
        glfw::KeyF10 => Some(F10),
        glfw::KeyF11 => Some(F11),
        glfw::KeyF12 => Some(F12),
        glfw::KeyKp0 => Some(INSERT),
        glfw::KeyKp1 => Some(END),
        glfw::KeyKp2 => Some(DOWN),
        glfw::KeyKp3 => Some(PAGEDOWN),
        glfw::KeyKp4 => Some(LEFT),
        glfw::KeyKp5 => Some(KP5),
        glfw::KeyKp6 => Some(RIGHT),
        glfw::KeyKp7 => Some(HOME),
        glfw::KeyKp8 => Some(UP),
        glfw::KeyKp9 => Some(PAGEUP),
        glfw::KeyKpDecimal => Some(COMMA),
        glfw::KeyKpDivide => Some(SLASH),
        glfw::KeyKpMultiply => Some(ASTERISK),
        glfw::KeyKpSubtract => Some(MINUS),
        glfw::KeyKpAdd => Some(PLUS),
        glfw::KeyKpEnter => Some(ENTER),
        glfw::KeyKpEqual => Some(EQUALS),
        _ => None
    }
}

